---
description: IMPORTANT - Toujours se référer a ce fichier : Il décrit le projet de facon technique pour le mener a bien , toutes les informations sont importantes
globs: 
alwaysApply: true
---
## Documentation technique – Développement site web Koté Piscine

## 1. Objectifs
Développer un site web catalogue informatif (sans vente en ligne) avec blog intégré pour Koté Piscine, destiné à inciter les clients à appeler ou à se rendre en magasin. Le site doit être performant, sécurisé et optimisé pour le référencement naturel.

## 2. Stack technologique détaillée
-Frontend : React (Vite) typescript, React Router DOM, Axios, TailwindCSS + PostCSS
-Backend : Node.js + Express.js, API REST
-Base de données : MongoDB 
-Administration : React Admin connecté à l’API backend 

## 3. Modèle de données MongoDB 
Voici les schémas à implémenter via Mongoose :

-Collection : products
{
  _id: ObjectId,
  name: String,               // Nom du produit
  slug: String,               // URL
  reference: String,          // Référence interne
  description: String,        // Description complète (Markdown possible)
  images: [String],           // URLs des images stockées
  category: ObjectId,         // Référence à une collection de catégorie
  price: Number,              // Prix indicatif (facultatif)
  availability: Boolean,      // Disponibilité en magasin
  createdAt: Date,
  updatedAt: Date
}

-Collection : posts (Articles Blog)
{
  _id: ObjectId,
  title: String,              // Titre de l’article
  slug: String,               // URL friendly générée automatiquement
  content: String,            // Contenu complet (Markdown supporté)
  author: String,             // Auteur de l'article
  image: String,              // Image d'illustration principale
  tags: [String],             // Tags pour SEO et classement
  createdAt: Date,
  updatedAt: Date
}


## 4. Structure précise du Frontend React

src/
├── api/                  # Gestion appels API (axios instances)
├── components/           # Composants réutilisables (Navbar, Footer, Card...)
├── pages/                # Pages complètes (Accueil, Services, Contact, Blog, Catalogue)
│   ├── HomePage.jsx
│   ├── ServicesPage.jsx
│   ├── ContactPage.jsx
│   ├── CataloguePage.jsx (détail produits en pop-up dans la page)
│   ├── BlogPage.jsx
│   └── BlogPostPage.jsx
├── layouts/              # Layouts principaux
│   └── MainLayout.jsx
├── routes/               # Configuration React Router DOM
│   └── AppRouter.jsx     # Utilisation d'un service URL
├── utils/                # Helpers divers (dates, formattage prix, slugify...)
├── images/               # Images for the website
├── App.jsx               # Point d'entrée principal
└── index.css             # Styles de l'application globale


## 5. Interactions Frontend-Backend

Le frontend interagit avec l’API backend via Axios :

API Endpoints principaux (RESTful) :
Méthode	    Route	            Description
GET	        /api/products	    Lister tous les produits (catalogue)
GET	        /api/products/:id	Détail d’un produit
GET	        /api/categories	    Lister les catégories
GET	        /api/posts	        Lister articles de blog
GET	        /api/posts/:slug	Détail article blog
POST	    /api/admin/login	Connexion admin
POST	    /api/admin/*	    CRUD admin sécurisé


## 6. Structure Backend Node.js/Express.js

backend/
├── controllers/          # Logique métier
├── models/               # Schémas Mongoose
├── routes/               # Routes Express
│   ├── products.js
│   ├── categories.js
│   ├── posts.js
│   └── admin.js
├── middleware/           # Middlewares d’authentification (JWT), validations, erreurs
├── utils/                # Fonctions utilitaires
├── config/               # Config DB MongoDB + Environnement (.env)
└── index.js              # Point d'entrée serveur Express

## 7. Structure des URL

/KotePiscine/            # Acceuil
├── services/           # Résumé des services
│   ├── construction-piscine  # Détail service construction
│   ├── renovation-piscine    # Détail service renovation
│   ├── entretien-piscine     # Détail service entretien
│   ├── reparation-piscine    # Détail service reparation robots et pompes
│   └── automatismes-piscine  # Détail service automatismes
├── catalogue/          # Catalogue produits (Fonctionne comme une unique page, pas de transition entre les URL URL, uniquement les transition fluides spécifique des composants mis a jour)
│   ├── produits-entretien-piscine            # Page catalogue triée
│   │   └── :slug                                   # produits de la categorie
│   ├── equipements-entretien-piscine        # Page catalogue triée
│   │   └── :slug                                   # produits de la categorie
│   ├── equipements-filtration-piscine         # Page catalogue triée
│   │   └── :slug                                   # produits de la categorie
│   ├── robots-piscine                        # Page catalogue triée
│   │   └── :slug                                   # produits de la categorie
│   └── Tuyauterie-piscine                        # Page catalogue triée
│       └── :slug                                   # produits de la categorie
├── nos-piscines/                 # Résumé de nos tecniques de constrution et réalisatoions
│   ├── piscines-beton            # Détail de notre tecniques de constrution béton 
│   └── piscines-autonettoyante   # Détail de notre tecniques de constrution autonettoyante 
├── notre-magasin   # Résumé sur l'entreprise :  notre contact, l'itinéraire, les horaires, l'equipe
└── site-map   # Site map pour l'exploration du robot google, n'est pas pas dans le menu du header mais figure dans le footer

## 8. Styles visuels (charte graphique stricte)

- Police d’écriture : Arboria

- Couleurs officielles :
    Bleu foncé (Principale): #244F82
    Blanc (Police): #F5F8FC
    Dégradé : Bleu clair : #0099D9 - Bleu foncé : #244F82
    Bleu turquoise (Secondaire): #40C0F0
    Vert clair (Call To Action): #B0C852

(Couleurs à intégrer directement via TailwindCSS personnalisé)


## 9. SEO et Optimisations techniques (futur-proof)

Balises sémantiques HTML claires (<header>, <nav>, <main>, <footer>, titres H1-H3)
URLs lisibles (ex : /catalogue/pompe-filtration-pentair, /blog/comment-choisir-sa-pompe)
Vitesse de chargement rapide (optimisation des images, lazy-loading, cache HTTP côté serveur)
Structure facilement évolutive pour intégration ultérieure de données structurées JSON-LD

## 10. Détails

# Fonctionement et cas d'utilisation des modal de détail produits
Trois cas d'utilisation :
- Depuis "Tout les produits" (page catalogue) :
L'URL change pour inclure la catégorie et le slug du produit quand le modal s'ouvre
Le background reste sur "Tout les produits"
Au retour, on revient à l'URL /catalogue sans changer l'affichage
- Depuis une catégorie spécifique (page /catalogue/[categorie]):
L'URL change pour inclure le slug du produit quand le modal s'ouvre
Le background reste sur la catégorie actuelle
Au retour, on revient à l'URL /catalogue/[categorie] sans changer l'affichage
- Depuis une autre page :
On navigue d'abord vers le catalogue
Puis on ouvre le modal avec l'URL complète
Au retour, on reste sur la page catalogue

## IMPORTANT - Toujours se référer a ce fichier : Il décrit le projet de facon technique pour le mener a bien , toutes les informations sont importantes
